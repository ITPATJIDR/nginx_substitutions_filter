version: '3.8'

services:
  # Keycloak - Identity Provider
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.1
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin123
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak123
      - KC_HOSTNAME=localhost
      - KC_HTTP_ENABLED=true
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    command: ["start-dev"]
    networks:
      - auth-network

  # PostgreSQL for Keycloak
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - auth-network

  # OAuth2 Proxy
  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.5.1
    container_name: oauth2-proxy
    environment:
      - OAUTH2_PROXY_PROVIDER=keycloak-oidc
      - OAUTH2_PROXY_CLIENT_ID=oauth2-proxy
      - OAUTH2_PROXY_CLIENT_SECRET=your-client-secret-here
      - OAUTH2_PROXY_REDIRECT_URL=http://localhost:4180/oauth2/callback
      - OAUTH2_PROXY_OIDC_ISSUER_URL=http://keycloak:8080/realms/master
      - OAUTH2_PROXY_COOKIE_SECRET=OQINaROshtE9TcZkNAm-5Zs2Pv3xaWytBmc5W7sPX7w=
      - OAUTH2_PROXY_COOKIE_SECURE=false
      - OAUTH2_PROXY_EMAIL_DOMAINS=*
      - OAUTH2_PROXY_HTTP_ADDRESS=0.0.0.0:4180
      - OAUTH2_PROXY_UPSTREAM=http://openresty:80
      - OAUTH2_PROXY_SKIP_AUTH_REGEX=^/health
    ports:
      - "4180:4180"
    depends_on:
      - keycloak
      - openresty
    networks:
      - auth-network

  # OpenResty (Nginx with Lua)
  openresty:
    image: openresty/openresty:alpine
    container_name: openresty
    volumes:
      - ./nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8090:80"
    depends_on:
      - express-api
    networks:
      - auth-network

  # Express API
  express-api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: express-api
    environment:
      - NODE_ENV=development
      - PORT=3000
    ports:
      - "3000:3000"
    volumes:
      - ./api:/app
      - /app/node_modules
    networks:
      - auth-network

volumes:
  postgres_data:

networks:
  auth-network:
    driver: bridge