worker_processes  1;
error_log stderr notice;

events {
    worker_connections  1024;
}

http {
    upstream oauth2_proxy {
        server oauth2-proxy:4180;
    }

    upstream express_api {
        server express-api:3000;
    }

    server {
        listen 80;
        server_name openresty;

        location /oauth2/ {
            proxy_pass http://oauth2_proxy;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
        }

        location = /oauth2/auth {
            internal;
            proxy_pass http://oauth2_proxy/oauth2/auth;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
        }

        location /api/ {
            auth_request /oauth2/auth;
            error_page 401 = /oauth2/sign_in;

            # Extract user info from OAuth2-Proxy response headers
            auth_request_set $auth_user   $upstream_http_x_auth_request_user;
            auth_request_set $auth_email  $upstream_http_x_auth_request_email;
            auth_request_set $auth_groups $upstream_http_x_auth_request_groups;
            auth_request_set $auth_token  $upstream_http_x_auth_request_access_token;

            # Strip /api prefix and pass to Express API
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://express_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass user info to Express API
            proxy_set_header X-Forwarded-User   $auth_user;
            proxy_set_header X-Forwarded-Email  $auth_email;
            proxy_set_header X-Forwarded-Groups $auth_groups;
            
            # Pass JWT token in Authorization header
            proxy_set_header Authorization "Bearer $auth_token";
        }

        location / {
            return 302 /api/;
        }
    }
}
