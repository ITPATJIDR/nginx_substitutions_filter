worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    resolver 127.0.0.11 ipv6=off;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /usr/local/openresty/nginx/logs/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    upstream api_upstream {
        server api:3000;
        keepalive 16;
    }

    upstream oauth2_proxy_upstream {
        server oauth2-proxy:4180;
        keepalive 16;
    }

    server {
        listen       8888;
        server_name  _;

        # oauth2-proxy endpoints
        location /oauth2/ {
            proxy_pass       http://oauth2_proxy_upstream;
            proxy_set_header Host                    $host;
            proxy_set_header X-Real-IP               $remote_addr;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
        }
        location = /oauth2/auth {
            proxy_pass       http://oauth2_proxy_upstream;
            proxy_set_header Host             $host;
            proxy_set_header X-Real-IP        $remote_addr;
            proxy_set_header X-Forwarded-Uri  $request_uri;
            proxy_set_header Content-Length   "";
            proxy_pass_request_body           off;
        }

        # Public routes
        location /api/public/ {
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://api_upstream;
        }

        # Protected routes via auth_request
        location /api/protected/ {
            auth_request /oauth2/auth;
            error_page 401 =403 /oauth2/sign_in;

            # pass information via X-User and X-Email headers to backend,
            # requires running oauth2-proxy with --set-xauthrequest
            auth_request_set $user   $upstream_http_x_auth_request_user;
            auth_request_set $email  $upstream_http_x_auth_request_email;
            proxy_set_header X-User  $user;
            proxy_set_header X-Email $email;

            # pass access token if enabled in oauth2-proxy
            auth_request_set $token  $upstream_http_x_auth_request_access_token;
            proxy_set_header X-Access-Token $token;

            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://api_upstream;
        }

        # Root -> API
        location = / {
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://api_upstream;
        }
    }
}


