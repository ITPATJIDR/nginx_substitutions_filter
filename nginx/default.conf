server {
    listen 80;
    server_name localhost;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Pass requests to Express app with body transformation
    location / {
        # Read request body
        lua_need_request_body on;
        
        # Transform request body (username -> name)
        access_by_lua_file /etc/nginx/lua/body_transform.lua;
        
        # Proxy to Express app
        proxy_pass http://app:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Content-Type $content_type;
        
        # Transform response body (name -> username)
        header_filter_by_lua_block {
            ngx.header.content_length = nil
        }
        body_filter_by_lua_file /etc/nginx/lua/response_transform.lua;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://app:3000/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
