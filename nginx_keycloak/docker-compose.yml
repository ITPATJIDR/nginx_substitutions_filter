version: '3.8'

services:
  keycloak:
    image: keycloak/keycloak:23.0
    container_name: keycloak
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KC_DB: dev-file
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HTTP_ENABLED: "true"
    ports:
      - "8080:8080"
    volumes:
      - keycloak_data:/opt/keycloak/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    build: ./app
    container_name: express_app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
    ports:
      - "3000:3000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    build: .
    container_name: nginx_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./logs:/var/log/nginx
      - nginx_cache:/var/cache/nginx
    environment:
      KEYCLOAK_URL: http://keycloak:8080
      APP_URL: http://app:3000
      KEYCLOAK_REALM: master
      KEYCLOAK_CLIENT_ID: nginx-client
      KEYCLOAK_CLIENT_SECRET: your-client-secret-here
    depends_on:
      keycloak:
        condition: service_healthy
      app:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

volumes:
  keycloak_data:
  nginx_cache:

networks:
  app-network:
    driver: bridge
